<説明できるように>

＜仮想マシン(VM— Virtual Machineとは＞
 1 台のコンピュータ内に擬似的に再現したコンピュータ 物理的なリソース(CPU、メモリ、ディスクなど)を論理的に統括・分割し て構築される
その目的は、ハードウェア プラットフォームとオペレーティング システムに依存しない実行環境を提供することです。
プログラムがどのプラットフォームでも常に同じように実行できるようになります。
物理コンピューターの代わりにソフトウェアを使用してプログラムやアプリを実行するリソースです

＜仮想マシンの利点＞ 
複数の OS を扱える 効率的なリソース活⽤

＜OSとは＞
オペレーティングシステム（Operating System、OS）は、コンピューターシステムの最も基本的なソフトウェアの一部であり、コンピューターハードウェアとユーザーソフトウェアの間に立つソフトウェアプログラムです。OSはコンピューターの動作を制御し、ユーザーとハードウェアリソースの間で仲介役として機能します。
異なる種類のOSがあり、一般的なOSにはWindows、macOS、Linuxなどがあります。それぞれのOSは、特定のハードウェアプラットフォームや用途に適した機能を提供します。OSはコンピューターシステムの中核であり、ユーザーやアプリケーションソフトウェアがコンピューターを効果的に活用できるようにする重要な要素です

＜ Linux とは＞ 
OS の⼀つ 無料で使えるオープンソース

＜ディストリビューションとは＞ 
Linux のアプリケーションやライブラリをひとまとめにして、PC にイン ストールすれば使える状態にした配布物 Debian、Ubuntu、Rocky、CentOS など

＜Debian とRocky の違い＞
先祖 OS - 　　(Debian が初代) 　　　　　RHEL(Red Hat Enterprise Linux)
リリース年 　　1993 年 　　　　　　　　　2021 年
⽤途 　　　　　汎⽤ 　　　　　　　　　　　主に商⽤
PKG 管理 　　　apt 　　　　　　　　　　　dnf(yum)
費⽤ 　　　　　無料 　　　　　　　　　　　無料
サポート 　　　　充実 　　　　　　　　　　充実　　　　　　　　　　　　下２つは同じ？

＜パッケージとは＞ 
ソフトウェアの実⾏に必要なファイルをまとめたもの 下記のようなもの 実⾏ファイル ライブラリ 設定ファイル リソース(画像・⾳楽ファイル)

＜パッケージ管理とは＞ 
パッケージのインストール/アンインストールを管理する パッケージをリポジトリから⾃動で探す リポジトリ：パッケージの保管場所 (配布サイト) パッケージの依存関係を⾃動で解決 依存関係：パッケージ A を利⽤するために、パッケージ B をインスト ールする必要がある状態 Linux では apt、yum、rpm などがある

Homebrew…パッケージ管理ツール
パッケージ管理システムとはこのパッケージのインストール（アンインストール）作業を一元的管理するものです。パッケージやライブラリの依存関係などが管理できます。
つまり、皆さんが普段使ってるgitなどのツールをパッケージといって、そのパッケージをバラバラに公式サイトからダウンロード、インストールするのではなく、パッケージ管理システムを使ってバージョンとか他のパッケージとの整合性とかを管理しようぜ！ということです。
公式から直接ダウンロードしてインストールするやり方だと、新しいバージョンが出た時に再度ダウンロード、インストールする必要があり、またパソコンには前のバージョンのファイルも存在するわけで、新しいバージョンをダウンロードする前に、前のバージョンの関連するファイルを削除したほうが良いのですが、削除しようにも、どれが関係するファイルなのかを見分けるのは難しいですし、時間がかかります。
その点、パッケージ管理システムを使うと、バージョンのインストール、アンインストールはもちろん、アップグレード、ダウングレードも簡単にできます。アンインストールするときには関連するファイルもすべて端末から削除することができるため、容量の節約にもなります。
何より、公式サイトに行って、ダウンロードをクリックして、zipファイルを解凍して、開いて、インストールするよりも、コマンド一つでインストールできたほうが楽ですよね？
HomebrewはmacOS上で動作するパッケージ管理ツールで、このHomebrewを用いて様々なパッケージをインストールすることができます。
※windowsでは動きません

＜ssh接続とは＞
Secure Shell（セキュアシェル）の略称
リモートコンピュータと通信するための仕組み
Sshは遠隔でサーバーにアクセスするtelnetの進化版。セキュリティがより強化され、本人確認、サーバーへのアクセス権限確認が行われる
Sshの認証方式は２つ
１，パスワード認証方式ーユーザー名とパスワードを使ってサーバーにログイン
２，公開鍵認証方式ー秘密鍵と公開鍵を使ってサーバーにログイン
…事前準備としてパソコン側で秘密鍵と公開鍵を作る。次にパソコン側は作った公開鍵をサーバーに渡す。次に秘密鍵（合言葉のようなもの）を作る
アクセス時にこれらの鍵を照らし合わせて本人確認をする

仮想マシンの上にLinux(Debian)を立ち上げる課題

＜カーネルとは＞
カーネルとはLinuxの核となる部分で、ハードウェアとアプリケーションの架け橋とも言われる。
プログラムの実行状態や、ハードウェア資源を管理し、アプリケーションがハードウェアの機能を利用する手助けをする。
カーネル自体はハードウェアと密接に関係しているので、ユーザーの命令を理解することができない。
そこで登場するのがシェルで、シェルが窓口となって、ユーザーの命令をカーネルに伝えることができる。

＜シェルとは＞
シェルとはユーザーと接する部分で、ユーザーの命令をカーネルに伝える機能を持っている。
代表的なものだと「sh」や「bash」が挙げられる。
「sh」は「bシェル」とも呼ばれ、動作は高速だが、機能面では他のシェルに劣る。
そのため、主にシェルスクリプトの実行環境に使われる。
「bash」は「bシェル」を拡張したシェルで、Linuxでは標準シェルとして採用されているので、最も広く普及しているシェルだ。
その他にも「ksh」「csh」「tcsh」「zsh」などが存在する。
シェルによってはコマンドが違うこともあるので、注意が必要だ。

＜ディストリビューションとは＞
「カーネル」と「シェル」だけでは、ユーザーは別途必要となるソフトウェアを入手し、自分でOSを組み立てる必要があり、高度な専門知識と技術が必要となってくる。
これは多くの人にとって障害であった。
そこで登場したのが「ディストリビューション」で、必要なアプリケーション一式を集め、インストールすればすぐにLinuxのOSとして使用できる形にまとめられている。
ディストリビューションは、上記の「カーネル」と「シェル」、そして「アプリケーション」から成りたっている。
Linuxのディストリビューションは多数の種類があり、人気の「Ubuntu」も代表的なディストリビューションだ。

＜aptitude と apt の違い＞aptitude と APT (Advanced Packaging Tool)
項⽬ 　　　apt-get 　　　　　　　　　　　　aptitude 　　　　　　　　　　　　　　　　　　　　　　　　　apt
違い 　　　設計にミ スあり 　　外部プロジェクトとして⽣まれ た GUI をもったもの(未完成) a　　　　pt-get の設計 上のミスを修正
使⽤ 推奨 　　　X 　　　　　　　　　　　　　　　　X 　　　　　　　　　　　　　　　　　　　　　　　　　　◯　
Aptitude は apt の拡張バージョンです。APT は下位レベルのパッケージ マネージャーであり、aptitude は上位レベルのパッケージ マネージャーです。もう 1 つの大きな違いは、両方のツールが提供する機能です。Aptitude は、apt-get と比較して優れた機能を提供します。どちらも、パッケージ管理を実行するために必要な手段を提供できます。ただし、より機能が豊富なアプローチを探している場合は、Aptitude が最適です。
* Aptitude は高レベルのパッケージ マネージャーですが、APT は他の高レベルのパッケージ マネージャーで使用できる低レベルです。
* Aptitude はより賢く、未使用のパッケージを自動的に削除したり、依存パッケージのインストールを提案したりします。
* Apt は、コマンドラインで指示されたことのみを明示的に実行します。
* Aptitudeは、 apt-getよりも機能が豊富で、 apt-get と、 apt-markやapt-cacheなどの他のバリアントの機能を統合しています。
apt-get はすべてのパッケージのインストール、アップグレード、システム アップグレード、パッケージの削除、依存関係の解決などを処理しますが、Aptitude は apt よりも多くの処理を処理します。これには、apt-mark と apt-cache の機能、つまりパッケージの検索が含まれます。インストールされているパッケージのリスト、自動または手動でインストールされるパッケージのマーク付け、アップグレードできないようにするパッケージの保持など。
Debianを家庭で使用する際に、apt、apt-get、aptitudeのどれが最適かを選ぶ際には、いくつかの要因を考慮する必要があります。それぞれのツールの特徴と違いについて説明しましょう。
apt:
特徴: aptは新しいAPTツールで、Debian 9以降で利用可能です。シンプルで使いやすく、進化し続けています。
利点:
より簡潔で直感的なコマンドラインインターフェースを提供します。
依存関係の解決に優れ、パッケージのインストールとアップグレードをスムーズに行えます。
自動でapt-getやapt-cacheなどのコマンドをまとめて提供します。
apt-get:
特徴: apt-getはDebianの長い歴史の中で使われてきた伝統的なAPTツールです。
利点:
Debianコミュニティで長い間使用されているため、ドキュメンテーションやリソースが豊富です。
スクリプトや自動化タスクに使用されることが多いため、システム管理者にとっては馴染み深いです。
aptitude:
特徴: aptitudeはテキストベースのAPTフロントエンドで、ターミナルで操作します。
利点:
インタラクティブなインターフェースを提供し、依存関係の解決やパッケージの管理を簡単に行えます。
ユーザーフレンドリーな方法で依存関係の問題を解決します。
選択肢に関する一般的なアドバイス:
Debian 9以降では、aptがデフォルトのAPTツールとして推奨されています。新しいユーザーにとっては、aptを試してみる価値があります。シンプルで効果的です。
既存のシステムやスクリプトがapt-getやaptitudeを使用している場合、そのまま使用することもできます。特にapt-getは多くのリソースが利用可能です。
また、ターミナルの快適さや個人の好みによる選択も重要です。どのツールもパッケージの管理を行うのに十分です。
最終的な選択は、あなたの好みとプロジェクトのニーズに依存します。一度試して、どれが最適かを見つけることをお勧めします。

＜APPArmor＞
 セキュリティ機能の⼀つ 強制アクセス制御 外部・内部からの脅威に対して OS やアプリケーションを防護 各プログラムにセキュリティプロファイルを結びつけ、プログラムのでき ることに制限をかける プロファイルは、ネットワークアクセス、ファイルへの読み書き実⾏など の機能を制限できる
システム管理者がプログラムの機能を制限できるようにする Linux カーネルのセキュリティ モジュール。
Mandatory Access Control (MAC) セキュリティを提供する Linux セキュリティ システム。システム管理者は、プロセスが実行できるアクションを制限できます。Debian にはデフォルトで含まれています。aa-status を実行して、実行中かどうかを確認します。
SELinux と APPArmor の違いは何ですか?
「これらのセキュリティ システムは、アプリケーションが侵害されたときにアプリケーションを相互に隔離し、ひいては攻撃者をシステムの残りの部分から隔離するためのツールを提供します。
SELinux
ルール セットは非常に複雑ですが、この複雑さにより、プロセスの分離方法をより詳細に制御できます。これらのポリシーの生成は自動化できます。このセキュリティ システムに対する欠点は、独自に検証することが非常に難しいことです。
AppArmor
 (および SMACK) は非常に簡単です。プロファイルは人間が手書きすることも、 aa-logprofを使用して生成することもできます。AppArmor はパスベースの制御を使用し、システムの透明性を高め、独立して検証できるようにします

＜プロファイル 【profile】＞
ITの分野では、何らかの対象に関する属性や設定などの情報を列挙した、ひとまとまりのデータの集合のことを指す場合が多い。
例えば、一台のコンピュータや一つのソフトウェアを複数の利用者で共用する際に、それぞれの利用者ごとの設定情報や個人的なデータなどを（ユーザー）プロファイルとしてまとめて切り替えることで、各々が自分専用のように使用することができる。

＜パーティションとは＞ 
ハードディスクの記憶領域を論理的に分割した領域のこと

＜ LVM とは＞
logical volume manager (LVM)
ディスク管理機能 複数のハードディスクやパーティションにまたがった記憶領域を⼀つの論 理ボリューム(LV)にまとめて扱うことができる システムを停⽌せずに論理ボリュームの拡⼤・縮⼩を⾏える
これは、ボリュームを格納するための従来のパーティショニング スキームよりも柔軟な、大容量ストレージ デバイス上にスペースを割り当てる方法を提供します。
LVM（Logical Volume Manager）は、Linuxベースのオペレーティングシステムで使用されるストレージマネジメントツールの1つです。LVMは、物理的なストレージデバイス（ハードディスク、SSDなど）を抽象化し、論理ボリューム（Logical Volume）として管理することを可能にします。以下に、LVMの仕組みを詳しく説明します。
LVMの主要な構成要素と仕組み:
* 物理ボリューム（Physical Volume - PV）:
    * 物理ディスク（ハードディスク、SSD）を物理ボリュームとして扱います。物理ボリュームは、LVMで管理対象となるストレージデバイスです。物理ボリュームは、ディスク全体またはディスクの一部を指すことができます。
* ボリュームグループ（Volume Group - VG）:
    * 一つ以上の物理ボリュームをまとめて、ボリュームグループとしてグループ化します。ボリュームグループは、LVMでの論理ボリュームの管理単位です。
* 論理ボリューム（Logical Volume - LV）:
    * ボリュームグループから論理ボリュームを作成します。論理ボリュームは、通常のファイルシステムと同じように扱える論理的なストレージボリュームです。論理ボリュームは、サイズを調整したり、スナップショットを取ったりすることが可能です。
* ファイルシステム:
    * 論理ボリュームには、通常のファイルシステムを作成およびマウントできます。ユーザーは論理ボリューム上にデータを保存し、必要に応じて論理ボリュームのサイズを調整できます。
LVMの仕組みを説明する際の重要なポイント:
* 物理ボリューム（Physical Volume）をLVMに登録し、ボリュームグループ（Volume Group）に追加します。
* ボリュームグループ内で論理ボリューム（Logical Volume）を作成し、必要なサイズを指定します。
* 論理ボリュームは、通常のディスクパーティションのように扱えます。ファイルシステムを論理ボリュームに作成し、データを保存できます。
* 論理ボリュームのサイズを拡張したり、ボリュームグループに新しい物理ボリュームを追加してストレージ容量を増やしたりできます。
* スナップショット（Snapshot）を作成して、データのバックアップや復元を容易に行えます。
LVMは、ストレージの柔軟性と拡張性を向上させ、データ管理を効率化するために広く使用されています。システム管理者やデータベース管理者にとって便利なツールであり、ストレージの動的な管理を可能にします

＜ sudo とは＞ 
現在ログインしているユーザーとは別のユーザーの権限でプログラムを実 ⾏するもの ⼀部のプログラムを⼀般ユーザーに管理者権限で実⾏させたい場合に利⽤ される

＜ FW とは＞ 
外部アクセスの制御を⾏う仕組み 「 外部からの接続は受け付けない」「ssh だけは許す」のような設定がで きる 不正なアクセスを防げる可能性が UP UFW は FW を簡単に設定できるツール
UFW (単純なファイアウォール)
UFW は、セキュリティを損なうことなくデバイスのファイアウォールを変更するためのインターフェイスです。これを使用して、接続を許可するポートと閉じるポートを構成します。これは SSH と併用すると便利で、動作する特定のポートを設定できます。
UFW（Uncomplicated Firewall）は、LinuxベースのオペレーティングシステムであるUbuntuやDebianなどで使用されるファイアウォール管理ユーティリティです。UFWは、シンプルで使いやすいインターフェースを提供し、ネットワークセキュリティを向上させるために設計されています。
UFWは、サーバーやデスクトップコンピューターなど、さまざまなLinuxベースの環境で使用され、ネットワークセキュリティを強化するための重要なツールの1つです。ネットワークアクセスを制御し、不正なアクセスや攻撃からシステムを保護するために役立ちます。

＜cronとは＞
 プログラムを定期的に⾃動実⾏させるための仕組み 設定は crontab ファイルで⾏う
cron または cron ジョブは、毎日特定の間隔または特定の時間に実行されるようにコマンドまたはスクリプトをスケジュールするコマンド ライン ユーティリティです。毎日特定の時間にサーバーを再起動するように設定する場合に便利です。